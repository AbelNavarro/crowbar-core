#!/usr/bin/env ruby
#
# Copyright 2011-2013, Dell
# Copyright 2013-2015, SUSE Linux GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "pathname"

def usage(exit_code)
  $stdout.puts "Usage: crowbar <area> <subcommand>"
  $stdout.puts "  Areas: #{@areas.keys.sort.join(" ")}"

  deprecate = "The crowbar command is deprecated, please use the new crowbarctl utility!"

  if $stdout.tty?
    $stderr.puts "\e[31m#{deprecate}\e[0m"
  else
    $stderr.puts deprecate
  end

  exit exit_code
end

loc = Pathname.new(
  File.expand_path(
    File.dirname(
      __FILE__
    )
  )
)

sym = if File.symlink?(__FILE__)
  Pathname.new(
    File.expand_path(
      File.dirname(
        File.readlink(
          __FILE__
        )
      )
    )
  )
end

@areas = {}.tap do |areas|
  [
    sym,
    loc
  ].compact.each do |path|
    path.children.each do |child|
      next unless child.executable?

      match = child.basename.to_s.match(
        /\Acrowbar_([\w_-]+)\z/
      )

      if match
        areas[match[1]] = child
      end
    end
  end
end

usage(-1) if ARGV.empty?
area = ARGV.shift
usage(-1) if @areas[area].nil?

exec(
  @areas[area].to_s,
  *ARGV
)

- if @count>0
  %p{:style => 'float:right'}
    = "#{@count} #{t('.proposals')}"
%h1= @title

%table.data.box
  %thead
    %tr
      %th{:style => "width:15%"}= t('.barclamp')
      %th.status{:style => "width:10%"}= t('.status')
      %th{:style => "width:75%"}= t('.description')

  %tbody
    - @modules.each do |name, barclamp|
      %tr{:class => cycle(:odd, :even, :name => "barclamps")}
        %td
          %a.toggle.with_label{:href => "#", :id => "#{name.parameterize}_details_toggle", :rel => "#{name.parameterize}_details"}= name.titlecase
        %td
          - if barclamp[:proposals].length == 0 
            .led{:id => "#{name.parameterize}_none", :class => 'none', :style => "float:left", :title=>t('proposal.status.none')}
          - else
            - barclamp[:proposals].sort.each do |proposal_name, proposal|
              .led{:id => "#{name.parameterize}_#{proposal_name}", :class => proposal[:status], :style => "float:left", :title=>"#{proposal_name.titlecase} - #{t 'proposal.status.'+proposal[:status]}"}
        %td= "#{barclamp[:description].capitalize}"

      %tr{:class => current_cycle("barclamps"), :style => "display:#{params[:id]==name ? 'float' : 'none'}", :id => "#{name.parameterize}_details"}
        %td.container{:colspan => "3"}
          .box
            %table.data
              %tbody
                - if barclamp[:proposals].length > 0
                  - barclamp[:proposals].sort.each do |proposal_name, proposal|
                    - prop_id = "#{name}_#{proposal_name}"
                    %tr{:class => ["proposal", cycle(:odd, :even)], :id => barclamp[:id]}
                      %td.status
                        .led{:class => proposal[:status], :id => "#{prop_id}_details", :title=> t('proposal.status.'+proposal[:status])}
                      %td{:style => "width:10%"}
                        - if proposal[:active]
                          = link_to proposal_name.titlecase, show_barclamp_path(:controller=>name, :id=>proposal_name)
                          %td= proposal[:description].capitalize
                        - else
                          = link_to proposal_name.titlecase, proposal_barclamp_path(:controller=>name, :id=>proposal_name)
                          %td= proposal[:description].capitalize
                      %td
                        - button = case proposal[:status]
                          - when 'hold' 
                            = button_to t('proposal.actions.delete'), delete_proposal_barclamp_path(:controller => name, :id => proposal_name, :return => true), :method => :delete, :id => "#{prop_id}_button", :class => 'button', :remote => true, :'data-confirm' => proposal_name.titlecase+": " + t('.confirm_delete'), :on_click => "$('#'+barclamp[:id]).remove()"
                          - when "ready" 
                            = button_to t('proposal.actions.recall'), delete_barclamp_path(:controller => name, :id => proposal_name, :return => true), :method => :delete, :class => 'button', :id => "#{prop_id}_button", :remote => true, :'data-confirm' => proposal_name.titlecase+": " + t('.confirm_recall')
                          - when 'unready'
                            = t '.in_process'
                          - when 'pending' 
                            = button_to t('proposal.actions.dequeue'), dequeue_barclamp_path(:controller => name, :id => proposal_name, :return => true), :method => :delete, :class => 'button', :id => "#{prop_id}_button", :remote => true, :'data-confirm' => proposal_name.titlecase+": " + t('.confirm_queue')
                          - else "#{t .no_action} #{t('proposal.status.'+proposal[:status])}"
                - if barclamp[:allow_multiple_proposals] or barclamp[:proposals].length == 0
                  - form_for :proposal, :remote => true, :url => create_proposal_barclamp_path(:controller => name), :html => { :'data-type' => 'html', :'data-method' => 'put', :method => :put, :id => 'create_proposal_form', :class => "formtastic"} do |f|
                    %tr{:class => ["proposal", cycle(:odd, :even)]}
                      %td{:style => "text-align:center"} +
                      %td
                        = hidden_field_tag :barclamp, name
                        = text_field_tag :name, t('proposal.items.default'), :size => 15
                      %td
                        = text_field_tag :description, "#{t 'created_on'} #{l(Time.now) }", :size => 60
                      %td
                        %input.button{:type => "submit", :value => t('proposal.actions.create')}

:javascript
  function update() {
    $.ajaxSetup({ timeout: 3000 }) 
    $.getJSON('#{status_proposals_barclamp_path}', function(data) {
      // If role has changed, re-render the page
      if (#{@count}>0 && data['count'] != #{@count}) {
        location.reload();
      };
      
      // Update proposals status
      $.each(data['proposals'], function(key,val) {
        led_update($('#'+key), key, val);
        led_update($('#'+key+'_details'), key, val);
      });

    });
  }
  
  function led_update(td, key, val) {
    if(!td.hasClass(val)){
      td.attr('class', val+' led');
      td.attr('title', val);
      td.effect("highlight", {color: '#666666'}, 2000);
      // remove the button since it does not reflect the state anymore
      $('#'+key+'_button').attr('hidden', 'true');
    };  
  }

- prop = "#{@proposal.barclamp}_#{@proposal.name}"
%p{:style => 'float:right'}
  = link_to t('cancel'), barclamp_modules_path(:id=>@proposal.barclamp), :class => 'button'
  
%h1.led.unknown{:id => prop, :title=>t('proposal.status.unknown')}
  = t '.title'

-# Rails 2 needs - and Rails 3 needs =
- form_for :proposal, :url => update_proposal_barclamp_path(:id => @proposal.name, :controller => @proposal.barclamp), :html => { :method => :post, :'data-type' => 'html', :id => 'update_proposal_form', :class => "box" } do |f|
  %p{:style=>'float:right'}
    - if @proposal["deployment"][@proposal.barclamp]["crowbar-committing"].nil? or !@proposal["deployment"][@proposal.barclamp]["crowbar-committing"]
      %input.button{:type => "submit", :name => "submit", :value => t('.save_proposal')}
      %input.button{:type => "submit", :name => "submit", :value => t('.commit_proposal'), :'data-confirm' => t('.apply_changes')}
      - unless @proposal["deployment"][@proposal.barclamp]["crowbar-queued"]
        %input.button{:type => "submit", :name => "submit", :value => t('.delete_proposal'), :'data-confirm' => t('.delete_changes')}
      - if @proposal["deployment"][@proposal.barclamp]["crowbar-queued"]
        %input.button{:type => "submit", :name => "submit", :value => t('.dequeue_proposal')}
  %h2= link_to "#{@proposal.barclamp.titlecase}: #{@proposal.name.titlecase}", barclamp_modules_path(:id=>@proposal.barclamp)

  %input#barclamp{:type => "hidden", :name => "barclamp", :value => @proposal.barclamp}
  %input#name{:type => "hidden", :name => "name", :value => @proposal.name}
  = render_attributes(@attr_raw, @proposal)
  = render :partial => "barclamp/attribute_helper"

  = render_deployment(@dep_raw, @proposal)

  %p
    - if @proposal["deployment"][@proposal.barclamp]["crowbar-committing"].nil? or !@proposal["deployment"][@proposal.barclamp]["crowbar-committing"]
      %input.button{:type => "submit", :name => "submit", :value => t('.save_proposal')}
      %input.button{:type => "submit", :name => "submit", :value => t('.commit_proposal'), :'data-confirm' => t('.apply_changes')}
      - unless @proposal["deployment"][@proposal.barclamp]["crowbar-queued"]
        %input.button{:type => "submit", :name => "submit", :value => t('.delete_proposal'), :'data-confirm' => t('.delete_changes')}
      - if @proposal["deployment"][@proposal.barclamp]["crowbar-queued"]
        %input.button{:type => "submit", :name => "submit", :value => t('.dequeue_proposal')}

  
:javascript

  function update() {
    $.ajaxSetup({ timeout: 3000 })
    $.getJSON('#{status_proposals_barclamp_path(:id=>prop)}', function(data) {
      // Update proposals status
      $.each(data['proposals'], function(key,val) {
        var el = $('#'+key);
        if(el.hasClass("unknown")) {
          led_update(el, key, val);
        } else {
          led_update(el, key, val, function(){ el.effect("highlight", {color: '#666666'}, 2000); });
        }
      });
    });
  }

  function led_update(td, key, val, callback) {
    if(!td.hasClass(val)){
      td.attr('class', val+' led').attr('title', val);
      if(typeof callback == 'function'){
        callback.call();
      }
    };
  }

  jQuery(document).ready(function($) {
    update();
  });

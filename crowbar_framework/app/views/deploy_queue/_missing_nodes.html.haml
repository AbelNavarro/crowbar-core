- missing_nodes = nodes.reject { |name| ServiceObject.is_cluster?(name) || ServiceObject.is_remotes?(name) }.map { |name| all_nodes[name] }.compact.select { |node| !node.ready? }
- if !missing_nodes.empty?
  %div
    = t(".waiting_for_nodes", :nodes => missing_nodes.map { |n| n.alias }.to_sentence)

- missing_clusters = nodes.select { |name| ServiceObject.is_cluster?(name) || ServiceObject.is_remotes?(name) }.map { |name| [name, ServiceObject.expand_nodes_for_all([name]).first.map { |n| all_nodes[n] }.compact] }
- missing_clusters = missing_clusters.select { |name, nodes| ServiceObject.cluster_status(nodes) != "ready" }.map { |name, nodes| ServiceObject.cluster_name(name) }
- if !missing_clusters.empty?
  %div
    -# Use uniq because a cluster might be missing twice, as part of "normal cluster" and as part of "remotes"
    = t(".waiting_for_clusters", :clusters => missing_clusters.uniq.to_sentence)
